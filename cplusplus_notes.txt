using namespace std; ####  to prevent having to specify the namespace over and over again. 

#include <iostream>  ####  allows you to use cout and cin with arrows.
#include <vector>    ####  c++ arrays which allow you to access and iterate through the items easily.

specify vector types by typing in vector<desired_type>

you can quickly pass a vector as an argument like this ( findAverages(5, vector<int>{1, 3, 2, 6, -1, 4, 1, 8, 2}) )

 Methods should be explicitly typed and their arguments should probably contain the address of 
 variables or containers. Also the arguments should probably be indicated to be const so that
 they can't be manipulated.       (  static vector<double> findAverages(int K, const vector<int>& arr)  )

vectors have a method size() which returns the length of the container i.e the number of elements it contains. ( v1.size() )

cout examples : 
                      cout << "Averages of subarrays of size K: ";
                      for (double d : result) {
                        cout << d << " ";
                      }
                      cout << endl;

class declaration example :

                      class AverageOfSubarrayOfSizeK {
                       public:
                       //populate with methods and variables
                       }

You can use the upper bound value for integers by first importing limits (  #include <limits> )
and then accessing the value through the proper namespace, type and method. ( minLength = numeric_limits<int>::max(); )
